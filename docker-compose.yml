version: '3'

services:
  elasticsearch:
    container_name: elasticsearch-fairlytics
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    expose:
      - 9200
      - 9300
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
  
  logstash:
    container_name: logstash-fairlytics
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
      - type: bind
        source: ./elasticsearch/certs/http_ca.crt
        target: /usr/share/logstash/config/http_ca.crt
        read_only: true
    expose:
      - 5000
      - 9600
      - 8080
      - 9200
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      SESSION_DURATION: $SESSION_DURATION
      FAIRLYTICS_SALT: $FAIRLYTICS_SALT
    depends_on:
      - elasticsearch

  kibana:
    container_name: kibana-fairlytics
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    expose:
      - 5601
    depends_on:
      - elasticsearch

  nginx:
    image: nginx
    container_name: nginx-fairlytics
    restart: unless-stopped
    volumes:
      - ./certificats:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - ./nginx:/etc/nginx/conf.d
    ports:
      - 80:80
      - 443:443
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    depends_on:
      - webapp
      - logstash

  webapp:
    image: webapp-fairlytics
    container_name: webapp-fairlytics
    restart: unless-stopped
    volumes:
      - ./elasticsearch/certs:/app/certs
      - ./db:/app/db
    expose:
      - 3000

  cli:
    image: cli-fairlytics
    container_name: cli-fairlytics
    volumes:
      - ./elasticsearch/certs:/usr/certs
      - ./packages/cli/backups:/usr/backups
    stdin_open: true
    tty: true

  certbot:
    image: certbot/certbot
    container_name: certbot-fairlytics
    restart: unless-stopped
    volumes:
      - ./certificats:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; chown -R 101:101 /etc/letsencrypt/archive; sleep 12h & wait $${!}; done;'"


volumes:
  elasticsearch:
  certbot_www:

networks:
  default:
    name: fairlytics
